{"version":3,"sources":["App.js","index.js"],"names":["App","state","data","results","searchUpdated","e","searchText","target","value","toLowerCase","filteredList","filter","c","name","includes","setState","axios","get","then","response","className","type","onChange","this","placeholder","map","src","flags","png","alt","capital","languages","length","l","join","currencies","curr","easyNumberFormatter","formatNumber","population","Component","ReactDOM","render","document","getElementById"],"mappings":"4OAGMA,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,QAAS,I,EAaXC,cAAgB,SAACC,GACf,IAAIC,EAAaD,EAAEE,OAAOC,MAAMC,cAC5BC,EAAe,EAAKT,MAAMC,KAAKS,QAAO,SAACC,GAAD,OACxCA,EAAEC,KAAKJ,cAAcK,SAASR,MAEhC,EAAKS,SAAS,CAAEZ,QAASO,K,uDAf3B,WAAqB,IAAD,OAClBM,IACGC,IACC,8FAEDC,MAAK,SAACC,GACL,EAAKJ,SAAS,CAAEb,KAAMiB,EAASjB,KAAMC,QAASgB,EAASjB,Y,oBAY7D,WACE,OACE,gCACE,oBAAIkB,UAAU,QAAd,oCACA,uBACEC,KAAK,OACLR,KAAK,SACLS,SAAUC,KAAKnB,cACfoB,YAAY,+BAEd,qBAAKJ,UAAU,YAAf,SACGG,KAAKtB,MAAME,QAAQsB,KAAI,SAACb,GAAD,OACtB,sBAAKQ,UAAU,UAAf,UACE,qBAAKM,IAAKd,EAAEe,MAAMC,IAAKC,IAAI,KAC3B,sBAAKT,UAAU,iBAAf,UACE,mBAAGA,UAAU,eAAb,SAA6BR,EAAEC,OAC/B,oBAAGO,UAAU,kBAAb,sBAAyCR,EAAEkB,cAE7C,sBAAKV,UAAU,kBAAf,UACE,8BACGR,EAAEmB,UAAUC,OAAS,EAAI,cAAgB,aACzCpB,EAAEmB,UAAUN,KAAI,SAACQ,GAAD,OAAOA,EAAEpB,QAAMqB,KAAK,SAEtCtB,EAAEuB,WAAWH,OAAS,GACrB,8BACGpB,EAAEuB,WAAWH,OAAS,EAAI,eAAiB,aAC3CpB,EAAEuB,WAAWV,KAAI,SAACW,GAAD,OAAUA,EAAKvB,QAAMqB,KAAK,SAGhD,6CACeG,IAAoBC,aAAa1B,EAAE2B,oBAlBxB3B,EAAEC,kB,GApC1B2B,aAiEHxC,IC/DfyC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.99279fa9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport easyNumberFormatter from \"easy-number-formatter\";\nclass App extends Component {\n  state = {\n    data: [], // This is all country list\n    results: [], // This is what we display\n  };\n\n  componentDidMount() {\n    axios\n      .get(\n        \"https://restcountries.com/v2/all?fields=name,capital,flags,languages,currencies,population\"\n      )\n      .then((response) => {\n        this.setState({ data: response.data, results: response.data });\n      });\n  }\n\n  searchUpdated = (e) => {\n    let searchText = e.target.value.toLowerCase();\n    let filteredList = this.state.data.filter((c) =>\n      c.name.toLowerCase().includes(searchText)\n    );\n    this.setState({ results: filteredList });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"title\">Countries of the World</h1>\n        <input\n          type=\"text\"\n          name=\"search\"\n          onChange={this.searchUpdated}\n          placeholder=\"Search by country name ...\"\n        />\n        <div className=\"countries\">\n          {this.state.results.map((c) => (\n            <div className=\"country\" key={c.name}>\n              <img src={c.flags.png} alt=\"\" />\n              <div className=\"country-header\">\n                <p className=\"country-name\">{c.name}</p>\n                <p className=\"country-capital\">Capital: {c.capital}</p>\n              </div>\n              <div className=\"country-details\">\n                <p>\n                  {c.languages.length > 1 ? \"Languages: \" : \"Language: \"}\n                  {c.languages.map((l) => l.name).join(\", \")}\n                </p>\n                {c.currencies.length > 0 && (\n                  <p>\n                    {c.currencies.length > 1 ? \"Currencies: \" : \"Currency: \"}\n                    {c.currencies.map((curr) => curr.name).join(\", \")}\n                  </p>\n                )}\n                <p>\n                  Population: {easyNumberFormatter.formatNumber(c.population)}\n                </p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}